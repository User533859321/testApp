{"ast":null,"code":"var _jsxFileName = \"/home/kali/Projects/Web Projects/React Script/test-chat-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport React, { useState } from 'react';\n\n// Your web app's Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBM-h_7Yqj3htWgD-TGiqWMah80CrAugQ4\",\n  authDomain: \"chatapp-a7bd5.firebaseapp.com\",\n  projectId: \"chatapp-a7bd5\",\n  storageBucket: \"chatapp-a7bd5.appspot.com\",\n  messagingSenderId: \"994185590333\",\n  appId: \"1:994185590333:web:5a29d493429f565412dc54\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst database = getDatabase();\nexport function writeIPaddr(ip) {\n  set(ref(database, 'ips/' + ip), {\n    addr: ip\n  });\n}\nwriteI;\nexport function writeUserData(userId, name) {\n  set(ref(database, 'users/' + userId), {\n    username: name\n  });\n}\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent the form from refreshing the page\n    console.log('Form submitted');\n    writeUserData('blocky', 'ej');\n    // Add your function here\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"App\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Input username and name for test confirmation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"usr\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 2\n  }, this);\n}\n_s(App, \"N6OdhwP+FHlG9+BH1n0kewQTyeg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["initializeApp","getDatabase","ref","set","React","useState","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","database","writeIPaddr","ip","addr","writeI","writeUserData","userId","name","username","App","_s","setUsername","setName","handleSubmit","event","preventDefault","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/kali/Projects/Web Projects/React Script/test-chat-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport React, { useState } from 'react';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n apiKey: \"AIzaSyBM-h_7Yqj3htWgD-TGiqWMah80CrAugQ4\",\n authDomain: \"chatapp-a7bd5.firebaseapp.com\",\n projectId: \"chatapp-a7bd5\",\n storageBucket: \"chatapp-a7bd5.appspot.com\",\n messagingSenderId: \"994185590333\",\n appId: \"1:994185590333:web:5a29d493429f565412dc54\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst database = getDatabase();\n\nexport function writeIPaddr(ip) {\n set(ref(database, 'ips/' + ip), {\n  addr: ip\n });\n }\n\nwriteI\n\nexport function writeUserData(userId, name) {\n set(ref(database, 'users/' + userId), {\n username: name\n });\n }\n\nfunction App() {\n const [username, setUsername] = useState(\"\");\n const [name, setName] = useState(\"\");\n\n const handleSubmit = (event) => {\n  event.preventDefault(); // Prevent the form from refreshing the page\n  console.log('Form submitted');\n  writeUserData('blocky', 'ej')\n  // Add your function here\n };\n \n return (\n <form className=\"App\" onSubmit={handleSubmit}>\n   <h1>Hello</h1>\n   <h2>Input username and name for test confirmation</h2>\n   <label htmlFor=\"username\">Username:</label>\n   <input type=\"text\" id=\"username\" className=\"usr\" value={username} onChange={e => setUsername(e.target.value)}/>\n   <label htmlFor=\"name\">Name:</label>\n   <input type=\"text\" id=\"name\" className=\"name\" value={name} onChange={e => setName(e.target.value)}/>\n   <button type=\"submit\">Submit</button>\n   {/* Rest of your component */}\n </form>\n );\n }\n\n export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}